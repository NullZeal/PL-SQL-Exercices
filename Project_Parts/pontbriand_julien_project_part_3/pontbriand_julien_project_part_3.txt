SQL> SET linesize 180
SQL> SET pagesize 300
SQL> 
SQL> -- QUESTION 1
SQL> connect scott/tiger;
Connected.
SQL> SET SERVEROUTPUT ON
SQL> CREATE OR REPLACE PROCEDURE giveEmpInfo (p_empno IN NUMBER) AS
  2  v_dept_name VARCHAR2(20);
  3  v_emp_name VARCHAR2(20);
  4  v_initial_salary NUMBER;
  5  
  6  v_annual_salary NUMBER;
  7  v_total_salary NUMBER;
  8  v_commission NUMBER;
  9  
 10  BEGIN
 11  
 12  SELECT NVL(d.DNAME,'Unknown'), e.ename, e.sal, NVL(e.comm,0)
 13  INTO v_dept_name, v_emp_name, v_initial_salary, v_commission
 14  FROM emp e
 15  JOIN dept d
 16  ON e.deptno = d.deptno
 17  WHERE e.empno = p_empno;
 18  
 19  v_annual_salary := v_initial_salary * 12;
 20  v_total_salary := v_annual_salary + v_commission;
 21  
 22  DBMS_OUTPUT.PUT_LINE('Employee Number: ' || p_empno);
 23  DBMS_OUTPUT.PUT_LINE('Employee Name: ' || v_emp_name);
 24  DBMS_OUTPUT.PUT_LINE('Employee department: ' || v_dept_name);
 25  DBMS_OUTPUT.PUT_LINE('Employee monthly salary : ' || v_initial_salary);
 26  DBMS_OUTPUT.PUT_LINE('Employee annual salary : ' || v_annual_salary);
 27  DBMS_OUTPUT.PUT_LINE('Employee commission : ' || v_commission);
 28  DBMS_OUTPUT.PUT_LINE('Employee total salary with commission: ' || v_total_salary);
 29  
 30  EXCEPTION
 31  WHEN NO_DATA_FOUND THEN
 32  DBMS_OUTPUT.PUT_LINE('Error - No employee has that number associated with it.');
 33  WHEN OTHERS THEN
 34  DBMS_OUTPUT.PUT_LINE('An error has occured.');
 35  END;
 36  /

Procedure created.

SQL> show error;
No errors.
SQL> 
SQL> exec giveEmpInfo (7839);
Employee Number: 7839                                                                                                                                                               
Employee Name: KING                                                                                                                                                                 
Employee department: ACCOUNTING                                                                                                                                                     
Employee monthly salary : 5000                                                                                                                                                      
Employee annual salary : 60000                                                                                                                                                      
Employee commission : 0                                                                                                                                                             
Employee total salary with commission: 60000                                                                                                                                        

PL/SQL procedure successfully completed.

SQL> exec giveEmpInfo (7499);
Employee Number: 7499                                                                                                                                                               
Employee Name: ALLEN                                                                                                                                                                
Employee department: SALES                                                                                                                                                          
Employee monthly salary : 1600                                                                                                                                                      
Employee annual salary : 19200                                                                                                                                                      
Employee commission : 300                                                                                                                                                           
Employee total salary with commission: 19500                                                                                                                                        

PL/SQL procedure successfully completed.

SQL> exec giveEmpInfo (99);
Error - No employee has that number associated with it.                                                                                                                             

PL/SQL procedure successfully completed.

SQL> ------------------------------------------------------------------------------------------------------------
SQL> 
SQL> -- QUESTION 2
SQL> connect des02/des02;
Connected.
SQL> SET SERVEROUTPUT ON
SQL> 
SQL> update item set item_desc = ''WHERE item_id = 2;

1 row updated.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE showItemDescription(p_inv_id_in IN NUMBER) AS
  2  
  3  v_inv_price NUMBER;
  4  v_inv_color VARCHAR2(20);
  5  v_inv_quantity NUMBER;
  6  v_inv_item_id NUMBER;
  7  v_item_desc varchar2(30);
  8  v_item_value NUMBER;
  9  
 10  BEGIN
 11  
 12  SELECT inv.inv_price, inv.color, inv.inv_qoh, inv.item_id, NVL(i.item_desc, 'No desc.')
 13  INTO v_inv_price, v_inv_color, v_inv_quantity, v_inv_item_id, v_item_desc
 14  FROM inventory inv
 15  JOIN item i
 16  ON inv.item_id = i.item_id
 17  WHERE inv.inv_id = p_inv_id_in;
 18  
 19  v_item_value := v_inv_quantity * v_inv_price;
 20  
 21  DBMS_OUTPUT.PUT_LINE('Item description: ' || v_item_desc);
 22  DBMS_OUTPUT.PUT_LINE('Item price: $CAD ' || v_inv_price);
 23  DBMS_OUTPUT.PUT_LINE('Item Color: ' || v_inv_color);
 24  DBMS_OUTPUT.PUT_LINE('Quantity: ' || v_inv_quantity);
 25  DBMS_OUTPUT.PUT_LINE('Item total value: $CAD ' || v_item_value);
 26  
 27  EXCEPTION
 28  WHEN NO_DATA_FOUND THEN
 29  DBMS_OUTPUT.PUT_LINE('Inventory ID # ' || p_inv_id_in || ' does not exist in the database.');
 30  WHEN OTHERS THEN
 31  DBMS_OUTPUT.PUT_LINE('An error has occured.');
 32  
 33  END;
 34  /

Procedure created.

SQL> show error;
No errors.
SQL> 
SQL> exec showItemDescription(1);
Item description: No desc.                                                                                                                                                          
Item price: $CAD 259.99                                                                                                                                                             
Item Color: Sky Blue                                                                                                                                                                
Quantity: 16                                                                                                                                                                        
Item total value: $CAD 4159.84                                                                                                                                                      

PL/SQL procedure successfully completed.

SQL> exec showItemDescription(32);
Item description: Girl's Soccer Tee                                                                                                                                                 
Item price: $CAD 19.99                                                                                                                                                              
Item Color: White                                                                                                                                                                   
Quantity: 100                                                                                                                                                                       
Item total value: $CAD 1999                                                                                                                                                         

PL/SQL procedure successfully completed.

SQL> exec showItemDescription(33);
Inventory ID # 33 does not exist in the database.                                                                                                                                   

PL/SQL procedure successfully completed.

SQL> 
SQL> --------------------------------------------------------------------------------------------------------
SQL> 
SQL> -- Question 3:
SQL> connect des03/des03;
Connected.
SQL> SET SERVEROUTPUT ON
SQL> 
SQL> CREATE OR REPLACE FUNCTION findAge(p_person_birthday_date IN DATE) RETURN NUMBER AS
  2  
  3  v_age_in_days NUMBER;
  4  v_age_in_years NUMBER;
  5  
  6  BEGIN
  7  
  8  v_age_in_days := SYSDATE - TO_DATE(p_person_birthday_date);
  9  v_age_in_years := FLOOR(v_age_in_days / 365.28);
 10  
 11  RETURN v_age_in_years;
 12  END;
 13  /

Function created.

SQL> show error;
No errors.
SQL> 
SQL> CREATE OR REPLACE PROCEDURE displayStudentInfos(p_student_id_in IN NUMBER) AS
  2  
  3  v_first_name VARCHAR2(30);
  4  v_last_name VARCHAR2(30);
  5  v_birthdate DATE;
  6  v_age NUMBER;
  7  
  8  BEGIN
  9  
 10  SELECT s_first, s_last, s_dob
 11  INTO v_first_name, v_last_name, v_birthdate
 12  FROM student
 13  WHERE s_id = p_student_id_in;
 14  
 15  v_age := findAge(v_birthdate);
 16  
 17  DBMS_OUTPUT.PUT_LINE('Student name is: ' || v_first_name);
 18  DBMS_OUTPUT.PUT_LINE('Student birthdate is: ' || v_birthdate);
 19  DBMS_OUTPUT.PUT_LINE('Student age is: ' || v_age);
 20  
 21  EXCEPTION
 22  
 23  WHEN NO_DATA_FOUND THEN
 24  DBMS_OUTPUT.PUT_LINE('No student found with ID # : ' || p_student_id_in);
 25  WHEN OTHERS THEN
 26  DBMS_OUTPUT.PUT_LINE('An error has occured.');
 27  
 28  END;
 29  /

Procedure created.

SQL> show error;
No errors.
SQL> 
SQL> EXEC displayStudentInfos(1);
Student name is: Sarah                                                                                                                                                              
Student birthdate is: 85-07-14                                                                                                                                                      
Student age is: 36                                                                                                                                                                  

PL/SQL procedure successfully completed.

SQL> EXEC displayStudentInfos(2);
Student name is: Brian                                                                                                                                                              
Student birthdate is: 85-08-19                                                                                                                                                      
Student age is: 36                                                                                                                                                                  

PL/SQL procedure successfully completed.

SQL> EXEC displayStudentInfos(3);
Student name is: Daniel                                                                                                                                                             
Student birthdate is: 82-10-10                                                                                                                                                      
Student age is: 39                                                                                                                                                                  

PL/SQL procedure successfully completed.

SQL> EXEC displayStudentInfos(6);
Student name is: Michael                                                                                                                                                            
Student birthdate is: 86-12-04                                                                                                                                                      
Student age is: 35                                                                                                                                                                  

PL/SQL procedure successfully completed.

SQL> EXEC displayStudentInfos(999);
No student found with ID # : 999                                                                                                                                                    

PL/SQL procedure successfully completed.

SQL> 
SQL> ---------------------------------------------------------------------------------------------------------
SQL> 
SQL> -- QUESTION 4
SQL> connect des04/des04;
Connected.
SQL> 
SQL> CREATE OR REPLACE FUNCTION does_skill_id_Exist(p_c_id_in IN NUMBER, p_skill_id_in IN NUMBER) RETURN NUMBER AS
  2  
  3  v_counter_id NUMBER;
  4  v_counter_skill NUMBER;
  5  v_output NUMBER;
  6  
  7  BEGIN
  8  
  9  SELECT COUNT(*)
 10  INTO v_counter_id
 11  FROM consultant
 12  WHERE (c_id = p_c_id_in);
 13  SELECT COUNT(*)
 14  INTO v_counter_skill
 15  FROM skill
 16  WHERE (skill_id = p_skill_id_in);
 17  
 18  IF v_counter_skill = 1 AND v_counter_id = 0 THEN
 19  v_output := 2;
 20  
 21  ELSIF v_counter_skill = 0 AND v_counter_id = 1 THEN
 22  v_output := 1;
 23  
 24  ELSIF v_counter_skill = 0 AND v_counter_id = 0 THEN
 25  v_output := 0;
 26  
 27  END IF;
 28  
 29  RETURN v_output;
 30  END;
 31  /

Function created.

SQL> 
SQL> SET SERVEROUTPUT ON
SQL> CREATE OR REPLACE PROCEDURE insert_or_update(p_consultant_id IN NUMBER, p_skill_id_in IN NUMBER, p_certification_status IN VARCHAR2) AS
  2  
  3  v_consultant_first_name VARCHAR2(30);
  4  v_consultant_last_name VARCHAR2(30);
  5  v_skill_description VARCHAR2(50);
  6  
  7  v_certification_status VARCHAR2(8);
  8  v_match NUMBER;
  9  
 10  ex_wrong_cert_found EXCEPTION;
 11  
 12  BEGIN
 13  
 14  SELECT c_first, c_last
 15  INTO v_consultant_first_name, v_consultant_last_name
 16  FROM consultant
 17  WHERE c_id = p_consultant_id;
 18  
 19  SELECT skill_description
 20  INTO v_skill_description
 21  FROM skill
 22  WHERE skill_id = p_skill_id_in;
 23  
 24  CASE
 25  
 26  WHEN p_certification_status = 'Y' THEN
 27  v_certification_status := v_certification_status;
 28  
 29  WHEN p_certification_status = 'N' THEN
 30  v_certification_status := v_certification_status;
 31  END CASE;
 32  
 33  SELECT COUNT(*)
 34  INTO v_match
 35  FROM consultant_skill
 36  WHERE c_id = p_consultant_id AND skill_id = p_skill_id_in;
 37  
 38  IF v_match = 0 THEN
 39  INSERT
 40  INTO consultant_skill (c_id, skill_id, certification)
 41  VALUES (p_consultant_id, p_skill_id_in, p_certification_status);
 42  
 43  DBMS_OUTPUT.PUT_LINE('New entry added to Database!');
 44  
 45  ELSE
 46  SELECT certification
 47  INTO v_certification_status
 48  FROM consultant_skill
 49  WHERE c_id = p_consultant_id AND skill_id = p_skill_id_in;
 50  
 51  IF  v_certification_status = p_certification_status THEN
 52  DBMS_OUTPUT.PUT_LINE('Values are the same, no need for update!');
 53  
 54  ELSE
 55  UPDATE consultant_skill
 56  SET certification = p_certification_status
 57  WHERE (c_id = p_consultant_id) AND (skill_id = p_skill_id_in);
 58  
 59  DBMS_OUTPUT.PUT_LINE('Database Updated!');
 60  END IF;
 61  
 62  END IF;
 63  
 64  COMMIT;
 65  
 66  DBMS_OUTPUT.PUT_LINE('Consultant first name: ' || v_consultant_first_name);
 67  DBMS_OUTPUT.PUT_LINE('Consultant last name: ' || v_consultant_last_name);
 68  DBMS_OUTPUT.PUT_LINE('Skill Description: ' || v_skill_description);
 69  
 70  EXCEPTION
 71  
 72  WHEN NO_DATA_FOUND THEN
 73  IF does_skill_id_Exist(p_consultant_id, p_skill_id_in) = 0 THEN
 74  DBMS_OUTPUT.PUT_LINE('Both Consultant ID AND Skill ID input do not exist in the database.');
 75  
 76  ELSIF does_skill_id_Exist(p_consultant_id, p_skill_id_in) = 1 THEN
 77  DBMS_OUTPUT.PUT_LINE('Skill ID input does not exist in the database.');
 78  
 79  ELSIF does_skill_id_Exist(p_consultant_id, p_skill_id_in) = 2 THEN
 80  DBMS_OUTPUT.PUT_LINE('Consultant ID input does not exist in the database.');
 81  END IF;
 82  
 83  WHEN CASE_NOT_FOUND THEN
 84  DBMS_OUTPUT.PUT_LINE('Certification Status can only be Y or N.');
 85  
 86  END;
 87  /

Procedure created.

SQL> show error
No errors.
SQL> SET SERVEROUTPUT ON
SQL> SELECT * FROM consultant_skill;

      C_ID   SKILL_ID CERTIFIC                                                                                                                                                      
---------- ---------- --------                                                                                                                                                      
       100          1 Y                                                                                                                                                             
       100          3 N                                                                                                                                                             
       100          6 Y                                                                                                                                                             
       101          4 N                                                                                                                                                             
       101          5 N                                                                                                                                                             
       102          7 Y                                                                                                                                                             
       103          1 Y                                                                                                                                                             
       103          6 Y                                                                                                                                                             
       103          8 Y                                                                                                                                                             
       103          9 Y                                                                                                                                                             
       104          8 N                                                                                                                                                             
       104          9 Y                                                                                                                                                             
       105          2 N                                                                                                                                                             
       105          3 N                                                                                                                                                             
       105          4 Y                                                                                                                                                             

15 rows selected.

SQL> 
SQL> EXEC insert_or_update(999999,8,'Y');
Consultant ID input does not exist in the database.                                                                                                                                 

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(104,999999,'Y');
Skill ID input does not exist in the database.                                                                                                                                      

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(9999999,8121123,'Z');
Both Consultant ID AND Skill ID input do not exist in the database.                                                                                                                 

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(9999999,81231123,'Y');
Both Consultant ID AND Skill ID input do not exist in the database.                                                                                                                 

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(100,2,'ZZZ');
Certification Status can only be Y or N.                                                                                                                                            

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(101,2,'ZZZZ3r32fd');
Certification Status can only be Y or N.                                                                                                                                            

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(101,4,'N');
Values are the same, no need for update!                                                                                                                                            
Consultant first name: Sheila                                                                                                                                                       
Consultant last name: Hernandez                                                                                                                                                     
Skill Description: Project Management                                                                                                                                               

PL/SQL procedure successfully completed.

SQL> 
SQL> EXEC insert_or_update(100,2,'N');
New entry added to Database!                                                                                                                                                        
Consultant first name: Mark                                                                                                                                                         
Consultant last name: Myers                                                                                                                                                         
Skill Description: COBOL Programming                                                                                                                                                

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(100,2,'N');
Values are the same, no need for update!                                                                                                                                            
Consultant first name: Mark                                                                                                                                                         
Consultant last name: Myers                                                                                                                                                         
Skill Description: COBOL Programming                                                                                                                                                

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(100,2,'Y');
Database Updated!                                                                                                                                                                   
Consultant first name: Mark                                                                                                                                                         
Consultant last name: Myers                                                                                                                                                         
Skill Description: COBOL Programming                                                                                                                                                

PL/SQL procedure successfully completed.

SQL> EXEC insert_or_update(102,8,'Y');
New entry added to Database!                                                                                                                                                        
Consultant first name: Brian                                                                                                                                                        
Consultant last name: Zhang                                                                                                                                                         
Skill Description: Windows NT/2000 Network Administration                                                                                                                           

PL/SQL procedure successfully completed.

SQL> 
SQL> SELECT * FROM consultant_skill;

      C_ID   SKILL_ID CERTIFIC                                                                                                                                                      
---------- ---------- --------                                                                                                                                                      
       100          1 Y                                                                                                                                                             
       100          3 N                                                                                                                                                             
       100          6 Y                                                                                                                                                             
       101          4 N                                                                                                                                                             
       101          5 N                                                                                                                                                             
       102          7 Y                                                                                                                                                             
       103          1 Y                                                                                                                                                             
       103          6 Y                                                                                                                                                             
       103          8 Y                                                                                                                                                             
       103          9 Y                                                                                                                                                             
       104          8 N                                                                                                                                                             
       104          9 Y                                                                                                                                                             
       105          2 N                                                                                                                                                             
       105          3 N                                                                                                                                                             
       105          4 Y                                                                                                                                                             
       100          2 Y                                                                                                                                                             
       102          8 Y                                                                                                                                                             

17 rows selected.

SQL> SPOOL OFF
